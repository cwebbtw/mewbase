//
// A reference.config file with many defaults for library factories and impls.
// It is intended that an application will produce its own application.config
// file which will overwrite the pertinent values to configure which factories
// and configure with values are used, for URIs e.g.
//
// Please see https://github.com/lightbend/config#note-about-resolving-substitutions-in-referenceconf-and-applicationconf
//


mewbase {

  // Event Store Factories and defaults
  event {

    // Event source
    source {

       // Using the local file system as an EventSource
               factory = "io.mewbase.eventsource.impl.file.FileEventSource"
               file {
                  basedir = "mewdata/events"
                }

      // using Nats.io event store as an EventSource
      //      factory = "io.mewbase.eventsource.impl.nats.NatsEventSource"
      //      nats {
      //        username = "TestClient"
      //        clustername = "test-cluster"
      //        url = "nats://localhost:4222"
      //    }

      // using kafka as an EvenSource
      //  factory = "io.mewbase.eventsource.impl.kafka.KafkaEventSource"
      //  kafka {
      //    bootstrap = "localhost:9092"  // the bootstrap cluster host and port
      //  }

//      factory = "io.mewbase.eventsource.impl.http.HttpEventSource"
//      http {
//        hostname = "localhost"
//        port = "8081"
//        url.prefix = ""     // "/mewbase"
//      }

    }


    sink {

       // local file based EventSink
              factory = "io.mewbase.eventsource.impl.file.FileEventSink"
              file {
                basedir = "mewdata/events"
              }

       // using Nats.io as an EventSink
       //    factory = "io.mewbase.eventsource.impl.nats.NatsEventSink"
       //     nats {
       //       username = "TestClient"
       //       clustername = "test-cluster"
       //       url = "nats://localhost:4222"
       //     }

       // using kafka as an EventSink
       // factory = "io.mewbase.eventsource.impl.kafka.KafkaEventSink"
       // kafka {
       //     bootstrap = "localhost:9092"  // the bootstrap cluster host and port
       // }

       // Using JMS event sink
       // factory = "io.mewbase.eventsource.impl.jms.JmsEventSink"
       // jms {
       //     // ActiveMQ
       //        connectionFactoryFQCN = "org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory"
       //        serverUrl = "tcp://localhost:61616"
       //        username = "admin"
       //        password = "admin"

       //     // Tibco EMS
       //       connectionFactoryFQCN = "com.tibco.tibjms.TibjmsConnectionFactory"
       //       serverUrl = "localhost"
       //       username = "admin"
       //       password = "admin"
       // }

        //      factory = "io.mewbase.eventsource.impl.http.HttpEventSink"
        //      http {
        //        hostname = "localhost"
        //        port = "8081"
        //        url.prefix = ""     // "/mewbase"
        //      }


      }

    channels.access {
      // A facgtory needs to be set in the conifg here - if not no access will default.
      factory = "io.mewbase.eventsource.channels.impl.AllAccessRegistry"
      // factory = "io.mewbase.eventsource.channels.impl.LocalAccessRegistry"
      // factory = "io.mewbase.eventsource.channels.impl.NoAccessRegistry"
    }

  } // event


  binders {

    // using the local file binder store
    factory = "io.mewbase.binders.impl.filestore.FileBinderStore"
    files.store {
      basedir = "mewdata/binders"
    }

    // using the postgres binder store
    //      factory = "io.mewbase.binders.impl.PostgresBinderStore";
    //        postgres.store {
    //          url = "jdbc:postgresql://127.0.0.1:5432/mewbase"
    //          username = "mewbase"   // override with application level secrets
    //          password = "mewbase"   // override with application level secrets
    //        }

    // using the lmdb store - Warning - experimental status
    //      factory = "io.mewbase.binders.impl.LmdbBinderStore"
    //      lmdb.store {
    //        basedir = "mewdata/binders"
    //        max.binders = 256
    //        max.binder.size = 1 Terrabyte
    //      }

  } // binders


  api  {

    rest {

      factory = "io.mewbase.rest.vertx.VertxRestServiceAdapter"
      vertx {
        host = "0.0.0.0"
        port = 8080
        timeout = 30 seconds
      }

      //      factory = "io.mewbase.rest.impl.SpringRestServiceAdaptor"
      //      spring {
      //        host = "127.0.0.1"
      //        port = 8080
      //        timeout = 30 seconds
      //      }

    }

  } // api



} // mewbase

